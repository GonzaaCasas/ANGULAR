//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PymesEntities : DbContext
    {
        public PymesEntities()
            : base("name=PymesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Articulo> Articulos { get; set; }
        public virtual DbSet<ArticulosFamilia> ArticulosFamilias { get; set; }
        public virtual DbSet<AuditoriasABM> AuditoriasABMs { get; set; }
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Contacto> Contactos { get; set; }
        public virtual DbSet<Departamento> Departamentos { get; set; }
        public virtual DbSet<Empresa> Empresas { get; set; }
        public virtual DbSet<EstadosCivile> EstadosCiviles { get; set; }
        public virtual DbSet<Grupos> Grupos { get; set; }
        public virtual DbSet<GruposPermiso> GruposPermisos { get; set; }
        public virtual DbSet<IvasTipos> IvasTipos { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Pais> Paises { get; set; }
        public virtual DbSet<Permiso> Permisos { get; set; }
        public virtual DbSet<Persona> Personas { get; set; }
        public virtual DbSet<Provincia> Provincias { get; set; }
        public virtual DbSet<Sesione> Sesiones { get; set; }
        public virtual DbSet<Sexo> Sexos { get; set; }
        public virtual DbSet<TelefonoXCliente> TelefonoXClientes { get; set; }
        public virtual DbSet<TiposDocumento> TiposDocumentos { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<UsuariosGrupos> UsuariosGrupos { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
        public virtual DbSet<VentasDetalle> VentasDetalles { get; set; }
    
        public virtual ObjectResult<ClientePorId_Result> ClientePorId(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientePorId_Result>("ClientePorId", idClienteParameter);
        }
    
        public virtual int ClientesContar(ObjectParameter cantidadDeClientes)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClientesContar", cantidadDeClientes);
        }
    }
}
